import datetime

import discord
from discord import Interaction
from discord.ext import commands

from managers import google_table_manager

ADMIN_ROLE_ID = 1309498655992188948
INVISIBLE_TEXT = '||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||||‚Äã||'

with open('./config/token') as file:
    TOKEN = file.read()

intents = discord.Intents.all()
bot = commands.Bot(command_prefix='!', help_command=None, intents=intents)


@bot.event
async def on_ready():
    print(f'Logged in as {bot.user.name}\nBot is ready')


@bot.slash_command(name='ping', description='–£–∑–Ω–∞—Ç—å –ø–∏–Ω–≥ –±–æ—Ç–∞')
async def cmd_ping(ctx: discord.ApplicationContext):
    embed = discord.Embed(
        color=0x0000ff,
        title=f'üèì –ü–æ–Ω–≥!',
        description=f'–ü–∏–Ω–≥: {round(bot.latency*1000)} ms'
    )
    await ctx.respond(embed=embed, ephemeral=True)


class MinecraftNicknameModal(discord.ui.Modal):
    def __init__(self, event_id: int, user_id: int) -> None:
        super().__init__(title='–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–∏–∫–∞ –≤ –º–∞–π–Ω–∫—Ä–∞—Ñ—Ç–µ')
        self.event_id = event_id
        self.user_id = user_id
        self.add_item(discord.ui.InputText(label="–í–∞—à –Ω–∏–∫ –≤ –º–∞–π–Ω–∫—Ä–∞—Ñ—Ç–µ", required=True))

    async def callback(self, interaction: Interaction):
        g_table = google_table_manager.GoogleTableManager(service_file='./auth.json', debug=True)
        g_table.set_user_mc_nick(self.event_id, self.user_id, self.children[0].value)
        await interaction.respond(content='–£—Å–ø–µ—à–Ω–æ!', ephemeral=True)


class OpenMinecraftNicknameModal(discord.ui.View):
    def __init__(self, event_id: int, user_id: int) -> None:
        super().__init__()
        self.event_id = event_id
        self.user_id = user_id

    @discord.ui.button(label='–ó–∞–≤–µ—Ä—à–∏—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é', style=discord.ButtonStyle.blurple)
    async def on_click(self, button: discord.ui.Button, interaction: discord.Interaction):
        button.disabled = True
        button.style = discord.ButtonStyle.green
        await interaction.response.send_modal(MinecraftNicknameModal(self.event_id, self.user_id))
        embed = interaction.message.embeds[0].to_dict()
        embed['color'] = 0x00ff00
        embed['description'] = embed['description'].replace('\n–î–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ', '')
        await interaction.edit_original_message(view=self, embed=discord.Embed.from_dict(embed))


@bot.slash_command(name='make_announcement', description='–°–æ–∑–¥–∞—Ç—å –∞–Ω–æ–Ω—Å –∏–≤–µ–Ω—Ç–∞')
async def cmd_make_announcement(
        ctx: discord.ApplicationContext,
        event_id: discord.Option(int, name='–∞–π–¥–∏', required=True)
):
    if ADMIN_ROLE_ID not in [role.id for role in ctx.author.roles]:
        embed = discord.Embed(
            color=0xff0000,
            title=f'‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø–æ–ª–Ω–æ–º–æ—á–∏–π'
        )
        await ctx.respond(embed=embed, ephemeral=True)
        return
    await ctx.defer()
    g_table = google_table_manager.GoogleTableManager('./auth.json')
    event = g_table.get_event(int(event_id))
    date = event['date']
    title = event['name']
    description = event['description']
    channel = ctx.channel
    embed = discord.Embed(
        color=0x00ff00,
        title=f'–ê–Ω–æ–Ω—Å –∏–≤–µ–Ω—Ç–∞ "{title}"',
        description=f'**–î–∞—Ç–∞ –∏–≤–µ–Ω—Ç–∞:** {date.strftime('%d.%m %H:%M')}\n' +
                    (f'**–û–ø–∏—Å–∞–Ω–∏–µ:** {'\n'.join(description.split('\\n'))}' if description is not None else '')
    )
    await channel.send(content=f'{INVISIBLE_TEXT}{event_id};', embed=embed)
    await ctx.delete()


@bot.event
async def on_raw_reaction_add(payload: discord.RawReactionActionEvent):
    channel = bot.get_guild(payload.guild_id).get_channel(payload.channel_id)
    message = await channel.fetch_message(payload.message_id)
    if message.author.id != bot.user.id:
        return
    message_text = message.content
    event_id = int(message_text.split('|')[-1].split(';')[0])
    user = channel.guild.get_member(payload.user_id)
    g_table = google_table_manager.GoogleTableManager('./auth.json', debug=True)
    event = g_table.get_event(event_id)

    if user.id in [x['user_id'] for x in event['members']]:
        await user.create_dm()
        dm_channel = user.dm_channel
        embed = discord.Embed(
            color=0xff0000,
            title=f'–û—à–∏–±–∫–∞!',
            description=f'–í—ã **—É–∂–µ –∑–∞–ø–∏—Å–∞–Ω—ã** –Ω–∞ –∏–≤–µ–Ω—Ç {event['name']}, '
                        f'–∫–æ—Ç–æ—Ä—ã–π –ø—Ä–æ–π–¥–µ—Ç **{event["date"].strftime("%d.%m –≤ %H:%M")}**\n\n'
                        f'–ï—Å–ª–∏ –≤—ã –ø–µ—Ä–µ–¥—É–º–∞–ª–∏ —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –∏–≤–µ–Ω—Ç–µ, —Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ <@669760356448731139>'
        )
        await dm_channel.send(embed=embed)
        return

    g_table.book_user(event_id, payload.user_id, user.display_name, '')
    await user.create_dm()
    dm_channel = user.dm_channel
    embed = discord.Embed(
        color=0x0000ff,
        title=f'–ó–∞–ø–∏—Å—å –Ω–∞ –∏–≤–µ–Ω—Ç',
        description=f'–í—ã –∑–∞–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –∏–≤–µ–Ω—Ç **{event['name']}**, '
                    f'–∫–æ—Ç–æ—Ä—ã–π –ø—Ä–æ–π–¥–µ—Ç **{event["date"].strftime("%d.%m –≤ %H:%M")}**\n'
                    f'–î–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ\n\n'
                    f'–ï—Å–ª–∏ –≤—ã –ø–µ—Ä–µ–¥—É–º–∞–ª–∏ —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –∏–≤–µ–Ω—Ç–µ, —Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ <@669760356448731139>'
    )
    await dm_channel.send(embed=embed, view=OpenMinecraftNicknameModal(event_id, user.id))


@bot.slash_command(name='add_event', description='–¥–æ–±–∞–≤–∏—Ç—å –∏–≤–µ–Ω—Ç')
async def cmd_add_event(
        ctx: discord.ApplicationContext,
        title: discord.Option(str, name='–Ω–∞–∑–≤–∞–Ω–∏–µ', description='–Ω–∞–∑–≤–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä –º–∞—Ñ–∏—è', required=True),
        date: discord.Option(str, name='–¥–∞—Ç–∞', description='–¥–∞—Ç–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ –¥–¥.–º–º —á—á:–º–º', required=True),
        description: discord.Option(str, name='–æ–ø–∏—Å–∞–Ω–∏–µ', description='–æ–ø–∏—Å–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞', required=False)
):
    date = datetime.datetime.strptime(date, '%d.%m %H:%M')
    await ctx.defer()
    g_table = google_table_manager.GoogleTableManager('./auth.json', debug=True)
    event_id = g_table.add_event(title, date, description)
    await ctx.respond(f'–ò–≤–µ–Ω—Ç "{title}" —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –Ω–∞ –¥–∞—Ç—É {date.strftime("%d.%m %H:%M")} '
                      f'—Å –∞–π–¥–∏ `{event_id}` –∏ '
                      f'{f'–æ–ø–∏—Å–∞–Ω–∏–µ–º {description}' if description is not None else '–±–µ–∑ –æ–ø–∏—Å–∞–Ω–∏—è'}\n'
                      f'–°—Å—ã–ª–∫–∞: {g_table.get_main_table().worksheet('id', event_id).url}', ephemeral=True)


bot.run(TOKEN)
